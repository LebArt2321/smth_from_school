#include <stdio.h>
#include <stdlib.h>
#include <iostream>
using namespace std;

struct Node {
	Node *next;
	int datax, datay;
};
typedef Node *PNode;
//добавляет в стек
void Push(PNode &Head, int x, int y);
//убирает из стека
void Pop(PNode &Head, int &x, int &y);
//проверка на пустоту стека
int Empty(PNode &Head);

int main() {
	int n, m, x, y;
	cin >> n >> m;
	int **A = new int*[n];
	for (int i = 0; i<n; i++) {
		A[i] = new int[m];
		for (int j = 0; j<n; j++)
			cin >> A[i][j];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++)
			cout << A[i][j] << " ";
		cout << endl;
	}
	cout << endl;
	cout << endl;
	cin >> x >> y;
	PNode S = NULL;
	Push(S, x, y);
	while (Empty(S) != 255) {
		Pop(S, x, y);
		if (A[x][y] == 0) A[x][y] = 2;
		if (A[x + 1][y] != 1 && A[x + 1][y] != 2) Push(S, x + 1, y);
		if (A[x - 1][y] != 1 && A[x - 1][y] != 2) Push(S, x - 1, y);
		if (A[x][y + 1] != 1 && A[x][y + 1] != 2) Push(S, x, y + 1);
		if (A[x][y - 1] != 1 && A[x][y - 1] != 2) Push(S, x, y - 1);
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++)
			cout << A[i][j] << " ";
		cout << endl;
	}
	return 0;
}

//функции
//добавляет в стек
void Push(PNode &Head, int x, int y) {
	PNode NewNode = new Node;
	NewNode->datax = x;
	NewNode->datay = y;
	NewNode->next = Head;
	Head = NewNode;
}
//убирает из стека
void Pop(PNode &Head, int &x, int &y) {
	PNode q = Head;
	if (Head == NULL);
	else {
		x = Head->datax;
		y = Head->datay;
		Head = Head->next;
		delete q;
	}
}
//проверка на пустоту стека
int Empty(PNode &Head) {
	if (Head == NULL) return 255;
}